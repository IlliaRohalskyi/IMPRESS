name: Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  container:
    runs-on: ubuntu-20.04
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      DB_HOSTNAME: ${{ secrets.DB_HOSTNAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
      DVC_TOKEN: ${{ secrets.DVC_TOKEN }}
      DVC_USERNAME: ${{ secrets.DVC_USERNAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REGION: ${{ secrets.ECR_REGION }}
      ECR_ACCOUNT_ID: ${{ secrets.ECR_ACCOUNT_ID }}
      ECR_IMAGE_NAME_1: Dockerfile-monitoring
      ECR_IMAGE_NAME_2: Dockerfile-prediction

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.10'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run tests
      run: pytest tests

    - name: Run linting
      run: |
        pylint src tests

    - name: Download ML models
      run: python src/components.model_loader.py

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com

    - name: Build and push Docker image 1
      run: |
        docker build -t $ECR_IMAGE_NAME_1 .
        docker tag $ECR_IMAGE_NAME_1:latest $ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/impress/$ECR_IMAGE_NAME_1:latest
        docker push $ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/impress/$ECR_IMAGE_NAME_1:latest

    - name: Build and push Docker image 2
      run: |
        docker build -t $ECR_IMAGE_NAME_2 .
        docker tag $ECR_IMAGE_NAME_2:latest $ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/impress/$ECR_IMAGE_NAME_2:latest
        docker push $ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/impress/$ECR_IMAGE_NAME_2:latest
